#开发环境日志配置

###########################日志配置#################################
#file和log，前者的优先级高，二者只能选其一
#生成log文件，可以是绝对路径，也可以是相对路径(调试期间使用相对路径，发布后使用绝对路径)
logging.file=logs/pinesoft.log
#设置目录，会在该目录下创建spring.log文件，并写入日志内容
#logging.path=logs/file_txt

#日志级别控制前缀，*代表所有，可以为包名或Logger名
#LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.level.*=DEBUG
#root日志的级别输出
logging.level.root=INFO

#自定义格式（控制台）
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
#自定义格式（文件）
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
###########################END#####################################


#########################Druid数据源配置###############################
#druid在1.1.8之后jdbc数据源属性配置方式有两种，仅限于jdbc数据源属性
#配置方式 1（和springboot默认相同）
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource #该属性在1.4被废弃，后期版本可以不需要添加
#spring.datasource.driverClassName = oracle.jdbc.driver.OracleDriver
#spring.datasource.url = jdbc:oracle:thin:localhost:orcl
#spring.datasource.username =YZTCOMMON
#spring.datasource.password =YZTCOMMON
#配置方式 2（druid内置）
spring.datasource.druid.url=jdbc:oracle:thin:localhost:orcl 
spring.datasource.druid.username=YZTCOMMON
spring.datasource.druid.password=YZTCOMMON
spring.datasource.druid.driver-class-name=oracle.jdbc.driver.OracleDriver
###############################END##################################


###############################ACTIVE_MQ############################
#active-mq单服务地址
spring.activemq.broker-url=tcp://localhost:61616
#active-mq集群配置
#spring.activemq.broker-url=failover:(tcp://172.18.1.188:61616,tcp://172.18.1.18:61616)
#active-mq用户名，根据实际情况配置  
#spring.activemq.password=
#active-mq密码，根据实际情况配置  
#spring.activemq.user=
#是否启用内存模式（也就是不安装MQ，项目启动时同时也启动一个MQ实例）
spring.activemq.in-memory=true
#是否信任所有的包
spring.activemq.packages.trust-all=true
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=
#使用发布/订阅模式时，下边配置需要设置成 true
spring.jms.pub-sub-domain=false
#用于重新定义队列和订阅的名称
#spring.activemq.queueName=pinesoft-queue-test
#spring.activemq.topicName=pinesoft-topic-test
###########################END#####################################


############################NETTY-SOCKETIO配置########################
socketio.server.port=8200
socketio.server.host=192.168.10.215
################################END#################################


############################RABBITMQ配置#############################
#指定RabbitMQ 的端口，默认: 5672
spring.rabbitmq.port=5672
#指定登陆broker的用户名.
spring.rabbitmq.username=guest
#指定rabbitmq broker的密码(web plugin)
spring.rabbitmq.password=guest
#指定连接到broker的Virtual host,相当于mq独立命名空间，其间数据独立，需要在rabbit broker中配置.
spring.rabbitmq.virtual-host=/
#是否允许发布者确认，默认false（消费者调用后消息回调）
spring.rabbitmq.publisher-confirms=false
#是否允许发布者反馈，默认false （发布者推送后消息反馈）
spring.rabbitmq.publisher-returns=false

spring.rabbitmq.queue-name=pine_queue
spring.rabbitmq.exchange-name=pine_exchange
spring.rabbitmq.exchange-type=topic
################################END#################################








