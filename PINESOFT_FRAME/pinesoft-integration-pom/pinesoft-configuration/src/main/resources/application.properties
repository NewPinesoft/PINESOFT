#指向开发环境
spring.profiles.active=dev

###################日志配置文件选择（logback和log4j2）##############
#日志彩色打印（会检测，支持的话才会采用）
spring.output.ansi.enabled=DETECT
#如果使用内置的logback，即使用(application.properties)内置的logging参数来简单配置使用时，注释下方参数并排除logback.xml，否则该文件会被默认加载
#logging.config=classpath:log4j2.xml
#logging.config=classpath:logback.xml
#########################END##############################


#########################ACTIVE_MQ##########################
#spring.activemq.pool.configuration.*= # See PooledConnectionFactory.
#如果此处设置为true，需要加activemq-pool依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败
spring.activemq.pool.enabled=true
#连接过期超时
spring.activemq.pool.expiry-timeout=0 
#连接空闲超时
spring.activemq.pool.idle-timeout=30000
# 连接池最大连接数
spring.activemq.pool.max-connections=50
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true

#使用发布/订阅模式时，下边配置需要设置成 true
spring.jms.pub-sub-domain=false
#用于重新定义队列和订阅的名称
#spring.activemq.queueName=pinesoft-queue-test
#spring.activemq.topicName=pinesoft-topic-test
###########################END##############################


##################### Druid连接池配置##########################
#druid在1.1.8之后添加了对springboot各版本的支持，不再需要专门配置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=1
#最大连接池数量
spring.datasource.druid.max-active=20
#最小连接池数量
spring.datasource.druid.min-idle=1
#	获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=60000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size= -1
#用来检测连接是否有效的sql
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#单位：秒，检测连接是否有效的超时时间
spring.datasource.druid.validation-query-timeout=6
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.druid.test-on-borrow=true
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.druid.test-on-return=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=false
#Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于,调用test-while-idle
spring.datasource.druid.time-between-eviction-runs-millis=60000
#连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=30000
#连接保持空闲而不被驱逐的最大时间
spring.datasource.druid.max-evictable-idle-time-millis=60000
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall,log4j
###########################END#############################


#########################Druid监控配置########################
#####配置WebStatFilter#####
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
#监控拦截排除一些如下结尾的不必要的url
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#开启关闭session统计功能
#spring.datasource.druid.web-stat-filter.session-stat-enable=false
#开启关闭session统计最大数目，缺省sessionStatMaxCount是1000个
#spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
#配置principalSessionName，使得druid能够知道当前的session的用户是谁
#spring.datasource.druid.web-stat-filter.principal-session-name=
#如果你的信息保存在cookie中，你可以配置principalCookieName，使得druid知道当前的user是谁
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=true
#####END#####

#####配置StatViewServlet#####
spring.datasource.druid.stat-view-servlet.enabled=true
#内置监控页面的首页是~/druid/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
#监控登陆用户名
spring.datasource.druid.stat-view-servlet.login-username=admin
#监控登陆密码
spring.datasource.druid.stat-view-servlet.login-password=admin
#监控访问的白黑名单，“,”分割
#deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
#如果allow没有配置或者为空，则允许所有访问
#spring.datasource.druid.stat-view-servlet.allow=128.242.127.1/24,128.242.128.1
#spring.datasource.druid.stat-view-servlet.deny=128.242.127.4
#####END#####

#####配置Druid和Spring关联监控配置
#Spring监控AOP切入点，如（方法名正则匹配拦截配置）,配置多个英文逗号分隔
#spring.datasource.druid.aop-patterns=x.y.z.service.* 
#如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置
#spring.aop.proxy-target-class=true
#####END#####
########################END#############################


#######################MYBATIS配置########################
mybatis.mapper-locations=classpath:mappings/**/*.xml
mybatis.configuration.mapUnderscoreToCamelCase=true
mybatis.configuration.callSettersOnNulls=true
###########################END##########################


#######################PAGEHELPER分页插件配置################
pagehelper.returnPageInfo=check
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
###########################END###########################





