######################ACTIVE_MQ#######################
#active-mq单服务地址
spring.activemq.broker-url=tcp://localhost:61616
#active-mq集群配置
#spring.activemq.broker-url=failover:(tcp://172.18.1.188:61616,tcp://172.18.1.18:61616)
#active-mq用户名，根据实际情况配置  
#spring.activemq.password=
#active-mq密码，根据实际情况配置  
#spring.activemq.user=
#是否启用内存模式（也就是不安装MQ，项目启动时同时也启动一个MQ实例）
spring.activemq.in-memory=true
#是否信任所有的包
spring.activemq.packages.trust-all=true
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=

#spring.activemq.pool.configuration.*= # See PooledConnectionFactory.
#如果此处设置为true，需要加activemq-pool依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败
spring.activemq.pool.enabled=true
#连接过期超时
spring.activemq.pool.expiry-timeout=0 
#连接空闲超时
spring.activemq.pool.idle-timeout=30000
# 连接池最大连接数
spring.activemq.pool.max-connections=50
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true

#使用发布/订阅模式时，下边配置需要设置成 true
spring.jms.pub-sub-domain=true
#用于重新定义队列和订阅的名称
#spring.activemq.queueName=pinesoft-queue-test
#spring.activemq.topicName=pinesoft-topic-test
########################END###########################


######################RABBIT_MQ#######################
#是否创建AmqpAdmin bean. 默认为: true
spring.rabbitmq.dynamic=true
#指定RabbitMQ host
spring.rabbitmq.host=localhost
#消息处理返回机制（优化消费异常引起的数据丢失）
spring.rabbitmq.listener.acknowledge-mode=AUTO
#是否在启动时就启动mq，默认: true
spring.rabbitmq.listener.auto-startup=true
#交付失败事都重新排列，默认true
spring.rabbitmq.listener.default-requeue-rejected=true.

#指定RabbitMQ 的端口，默认: 5672
spring.rabbitmq.port=5672
#指定登陆broker的用户名.
spring.rabbitmq.username=guest
#指定rabbitmq broker的密码(web plugin)
spring.rabbitmq.password=guest
#指定连接到broker的Virtual host,相当于mq独立命名空间，其间数据独立，需要在rabbit broker中配置.
spring.rabbitmq.virtual-host=/
#是否允许发布者确认，默认false（消费者调用后消息回调）
spring.rabbitmq.publisher-confirms=false
#是否允许发布者反馈，默认false （发布者推送后消息反馈）
spring.rabbitmq.publisher-returns=false

#指定心跳超时，in seconds 0为不指定.
#spring.rabbitmq.requested-heartbeat=
#指定client连接到的server的地址，多个以逗号分隔.
#spring.rabbitmq.addresses=
#指定最小的消费者数量.
#spring.rabbitmq.listener.concurrency=
#指定最大的消费者数量.
#spring.rabbitmq.listener.max-concurrency=
#指定一个请求能处理多少个消息，如果有事务的话，必须大于等于transaction数量.
#spring.rabbitmq.listener.prefetch=
#指定一个事务处理的消息数量，最好是小于等于prefetch的数量.
#spring.rabbitmq.listener.transaction-size=

#spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached. 
#spring.rabbitmq.cache.channel.size=# Number of channels to retain in the cache.
#spring.rabbitmq.cache.connection.mode=CHANNEL # Connection factory cache mode.
#spring.rabbitmq.cache.connection.size=# Number of connections to cache.
#spring.rabbitmq.connection-timeout=# Connection timeout, in milliseconds; zero for infinite.

#spring.rabbitmq.ssl.enabled=false # Enable SSL support.
#spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.
#spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.
#spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.
#spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.
#spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.

#spring.rabbitmq.template.mandatory=false # Enable mandatory messages.
#spring.rabbitmq.template.receive-timeout=0 # Timeout for `receive()` methods.
#spring.rabbitmq.template.reply-timeout=5000 # Timeout for `sendAndReceive()` methods.
#spring.rabbitmq.template.retry.enabled=false # Set to true to enable retries in the `RabbitTemplate`.
#spring.rabbitmq.template.retry.initial-interval=1000 # Interval between the first and second attempt to publish a message.
#spring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to publish a message.
#spring.rabbitmq.template.retry.max-interval=10000 # Maximum number of attempts to publish a message.
#spring.rabbitmq.template.retry.multiplier=1.0 # A multiplier to apply to the previous publishing retry interval.

#spring.rabbitmq.listener.retry.enabled=false # Whether or not publishing retries are enabled.
#spring.rabbitmq.listener.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.
#spring.rabbitmq.listener.retry.max-attempts=3 # Maximum number of attempts to deliver a message.
#spring.rabbitmq.listener.retry.max-interval=10000 # Maximum interval between attempts.
#spring.rabbitmq.listener.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.
#spring.rabbitmq.listener.retry.stateless=true # Whether or not retry is stateless or stateful.

spring.rabbitmq.queue-name=pine_queue
spring.rabbitmq.exchange-name=pine_exchange
#direct:按照routingkey分发到指定队列 ;
#topic:多关键字匹配（比Direct方式多了*和#的通配符）;
#fanout:将消息分发到所有的绑定队列（订阅/发布），无routingkey的概念;
#headers:通过添加属性key-value匹配;
spring.rabbitmq.exchange-type=topic

########################END###########################
 


