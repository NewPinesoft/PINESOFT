package org.pine.common.criteria;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

/** 
* @author  xuj: 
* @date 创建时间：2016年10月31日 上午9:37:59 
* @version 1.0 
* @parameter  
* @since  
* @return  
*/
/**
 * This class was generated by MyBatis Generator. This class corresponds to the database table YZT_MENU
 * @mbg.generated  Sun Oct 09 14:33:48 CST 2016
 */
public  class GeneratedCriteria {
	protected List<Criterion> criteria;

	public GeneratedCriteria() {
		super();
		criteria = new ArrayList<Criterion>();
	}
	public boolean isValid() {
		return criteria.size() > 0;
	}

	public List<Criterion> getAllCriteria() {
		return criteria;
	}

	public List<Criterion> getCriteria() {
		return criteria;
	}

	public void addCriterion(String condition) {
		//Criterion xx=new Criterion("");
		if (condition == null) {
			throw new RuntimeException("Value for condition cannot be null");
		}
	 
		criteria.add(new Criterion(condition));
	}
	public void addCriterion(String condition, Object value) {
		if (value == null) {
			throw new RuntimeException("Value for  cannot be null");
		}
		criteria.add(new Criterion(condition, value));
	}
	public void addCriterion(String condition, Object value, String property) {
		if (value == null) {
			throw new RuntimeException("Value for " + property + " cannot be null");
		}
		criteria.add(new Criterion(condition, value));
	}

	public void addCriterion(String condition, Object value1, Object value2, String property) {
		if (value1 == null || value2 == null) {
			throw new RuntimeException("Between values for " + property + " cannot be null");
		}
		criteria.add(new Criterion(condition, value1, value2));
	}

	public void addCriterionForJDBCDate(String condition, Date value, String property) {
		if (value == null) {
			throw new RuntimeException("Value for " + property + " cannot be null");
		}
		addCriterion(condition, new java.sql.Date(value.getTime()), property);
	}

	public void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
		if (values == null || values.size() == 0) {
			throw new RuntimeException("Value list for " + property + " cannot be null or empty");
		}
		List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
		Iterator<Date> iter = values.iterator();
		while (iter.hasNext()) {
			dateList.add(new java.sql.Date(iter.next().getTime()));
		}
		addCriterion(condition, dateList, property);
	}

	public void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
		if (value1 == null || value2 == null) {
			throw new RuntimeException("Between values for " + property + " cannot be null");
		}
		addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
	}


}

